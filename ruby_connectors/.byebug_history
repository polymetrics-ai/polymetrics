c
exit
RubyConnectors::Services::ConnectorService.connect_and_fetch_status(connector_id)
exit
c
connector_id
exit
g
connector_id
exit
connector_id
conenctor_id
c
connector
connector.update!(connected: status)
connector.update(connected: status)
status = connect_to_connector(connector)
connector = fetch_connector(connector_id).first
c
@config[:repository]
@config[:personal_access_token]
 Octokit::Client.new(access_token: @config[:personal_access_token]).repository?(@config[:repository])
c
@config[:repository]
@config[:personal_access_token]
 Octokit::Client.new(access_token: @config[:personal_access_token]).repository?(@config[:repository])
Octokit::Client.new(access_token: @config[:personal_access_token]) 
c
 Octokit::Client.new(access_token: @config[:personal_access_token]).repository?(@config[:repository])
 Octokit::Client.new(access_token: @config[:personal_access_token])
@config[:personal_access_token]
exit
@config
@config[:repository]
client = authorize_connection
c
@connection.connect
@connection
c
JSON.parse(connector[:configuration])
client.connect
client = client_class.new(JSON.parse(connector[:configuration]))
client_class = Object.const_get("RubyConnectors::#{connector[:connector_class_name].capitalize}Connector::Client")
client_class = Object.const_get(connector[:connector_class_name].capitalize)
        connector = fetch_connector(connector_id)
RubyConnectors::GithubConnector::Client
status = connect_to_connector(connector)
connector = fetch_connector(connector_id)
c
connector[:connector_class_name].capitalize
connector[:connector_class_name].capitalise
connector[:connector_class_name]
status = connect_to_connector(connector)
connector = fetch_connector(connector_id)
c
status = connect_to_connector(connector)
connector = fetch_connector(connector_id)
c
a.first
a
a = fetch_connector(connector_id)
fetch_connector(connector_id)
DB
exit
RubyConnectors::GithubConnector::Client.new(connector_id).connect
result
c
RubyConnectors::GithubConnector::Client.new(connector_id).connect
c
RubyConnectors::Temporal::Activities::ConnectionStatusActivity.execute(connector_id)
connector_id
exit
@connection
exit
RubyConnectors::GithubConnector::Connection.new(config)
RubyConnectors::GithubConnector::Connection
@connection
